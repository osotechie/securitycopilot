{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "Account Compromize Investigation",
        "description":  "This is a prototype of a Logic App that can be executed as a playbook on a Microsoft Sentinel incident. In combination with the custom KQL plugin Incident-Account-Investigation-Helper, it retrieves information about the accounts involved in the incident to help determine whether they are compromised. In its current version, the Logic App sends this information via email and/or adds it as a comment to the original Sentinel incident. If you prefer a different behavior, please modify the Logic App accordingly.",
        "prerequisites":  "The Microsoft Sentinel or Microsoft Defender - NOTE: the custom plugin Incident-Account-Investigation-Helper is configured to use Microsoft Sentinel in order to enable a wider time interval when querying the SecurityAlerts table. Modify it to use Microsoft Defender if needed.",
        "postDeployment":  [
            "Set the Logic App parameters",
            "Set the credentials for the connections to Security Copilot and to Office 365",
            "Set the permission to write back the comments or tags in Sentinel (if required)"
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "2025.05.26",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  "Stefano Pescosolido - https://www.linkedin.com/in/stefanopescosolido/"
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "AccountCompromiseInvestigation",
            "type":  "string"
        },
        "Prompts":  {
            "type":  "Array",
            "metadata":  {
                "description":  "JSON structure including the list of prompts to be executed. For the JSON schema please refer to the documentation of this solution."
            }
        },
        "HtmlBodyHeader":  {
            "defaultValue": "<!DOCTYPE html><html><style>.notification-table-header {padding: 10px;width: auto;border-top: none;background: #0078D4;font-size: 11.0pt;color: white;font-weight: bold;margin-left: 10px;text-align: left;border: none;border-bottom: solid white 1.5pt;} .notification-table-text {padding: 10px;margin-left: 5px;width: 70%;text-align: left;border: none;border-bottom: solid white 1.5pt;background: #FAFAFA;font-size: 12.0pt;height: 20.05pt;} .notification-card-footer span {font-size: 12.0pt;color: #000000;} .notification-card-footer p {vertical-align: baseline;} .notification-body {margin: 0 auto;text-align: center;width: 650px;border: 1px black;border-collapse: collapse;background-color: #CCE4F6;} </style>  <body style=\"background-color: #dfdfdf;\"><table style=\"width:100%;\"><tr><td style=\"padding:0;\"><div align=\"center\"><table class=\"notification-body\"><tr style=\"border: 1px grey; border-top:none;\"><td><p style='font-size:5.0pt;'><span>&nbsp;</span></p><table style='width:590px;margin:0 auto;border-collapse:collapse;'><tr class=\"notification-card-footer\"><td><p style='text-align:left; font-size:12.0pt;'><b>***EMAILTITLE***</b></p></td></tr>",                        
            "type":  "String",
            "metadata":  {
                "description":  "Initial part of the HTML body of the email sent by the solution."
            }
        },
        "HtmlBodyRow":  {
            "defaultValue": "<tr><td class=\"notification-table-header\"><span>***CONTENT1***</span></td></tr><tr><td class=\"notification-table-text\"><span>***CONTENT2***</span></td></tr><tr class=\"notification-card-footer\"><td><p style='text-indent:36.0pt;'><span style='font-size:10.0pt;'>&nbsp;</span></p></td></tr>",
            "type":  "String",
            "metadata":  {
                "description":  "HTML structure of a single row in the body of the email sent by the solution."
            }
        },
        "HtmlBodyFooter":  {
            "defaultValue": "<tr class=\"notification-card-footer\"><td><p style='text-align:center;'><span style='font-size:12.0pt; color:yellow;'>The content of this email was generated by Artificial Intelligence and may not be accurate. Please verify its accuracy..</span><br/><span style='font-size:12.0pt;'>To access Security Copilot, click <a href=\"https://security.microsoft.com/\">HERE</a>.</span><br></p></td></tr></table></td></tr></table></div></td></tr></table></body></html>",
            "type":  "String",
            "metadata":  {
                "description":  "Final part of the HTML body of the email sent by the solution."
            }
        },
        "EmailTitle":  {
            "defaultValue": "Account Compromise Investigation on Incident <INCIDENT_ID>",
            "type":  "String",
            "metadata":  {
                "description":  "Title written in the body in the email sent by the solution."
            }
        },
        "Email Subject":  {
            "defaultValue": "Account Compromise Investigation on Incident <INCIDENT_ID>",
            "type":  "String",
            "metadata":  {
                "description":  "Subject of the email sent by the solution."
            }
        },
        "EmailRecipients":  {
            "defaultValue": "",
            "type":  "String",
            "metadata":  {
                "description":  "Recipients for the email sent by the solution."
            }
        },
        "ConvertToHtml":  {
            "defaultValue": "false",
            "type":  "Bool",
            "metadata":  {
                "description":  "Format and/or convert the content produced by Security Copilot from Markdown to HTML. Set to true or to false. Attention: setting the content to true may cause additional interaction with Security Copilot and, then, higher SCUs consumption and costs."
            }
        },
        "UseSingleSession":  {
            "defaultValue": "true",
            "type":  "Bool",
            "metadata":  {
                "description":  "Use a single session in Security Copilot. Set to true or false. Refer to the documentation for the details."
            }
        },
        "SendResultsByEmail":  {
            "defaultValue": "false",
            "type":  "Bool",
            "metadata":  {
                "description":  "Send the results by email"
            }
        },
        "WriteResultsInIncident":  {
            "defaultValue": "true",
            "type":  "Bool",
            "metadata":  {
                "description":  "Write the results in the comment of the incident in Microsoft Sentinel / Defender"
            }
        }
    },
    "variables":  {
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "SecuritycopilotConnectionName":  "[concat('Securitycopilot-', parameters('PlaybookName'))]",
        "Office365ConnectionName":  "[concat('Office365-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        },
                        "Prompts":  {
                            "defaultValue":  "[parameters('Prompts')]",
                            "type":  "Array"
                        },
                        "HtmlBodyHeader":  {
                            "defaultValue":  "[parameters('HtmlBodyHeader')]",
                            "type":  "String"
                        },
                        "HtmlBodyRow":  {
                            "defaultValue":  "[parameters('HtmlBodyRow')]",
                            "type":  "String"
                        },
                        "HtmlBodyFooter":  {
                            "defaultValue":  "[parameters('HtmlBodyFooter')]",
                            "type":  "String"
                        },
                        "EmailTitle":  {
                            "defaultValue":  "[parameters('EmailTitle')]",
                            "type":  "String"
                        },
                        "Email Subject":  {
                            "defaultValue":  "[parameters('Email Subject')]",
                            "type":  "String"
                        },
                        "EmailRecipients":  {
                            "defaultValue":  "[parameters('EmailRecipients')]",
                            "type":  "String"
                        },
                        "ConvertToHtml":  {
                            "defaultValue":  "[parameters('ConvertToHtml')]",
                            "type":  "Bool"
                        },
                        "UseSingleSession":  {
                            "defaultValue":  "[parameters('UseSingleSession')]",
                            "type":  "Bool"
                        },
                        "SendResultsByEmail":  {
                            "defaultValue":  "[parameters('SendResultsByEmail')]",
                            "type":  "Bool"
                        },
                        "WriteResultsInIncident":  {
                            "defaultValue":  "[parameters('WriteResultsInIncident')]",
                            "type":  "Bool"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "body":  {
                                    "callback_url":  "@listCallbackUrl()"
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Initialize_variable_prompt_text":  {
                            "runAfter":  {
                                "Parse_JSON_-_Prompts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "prompt",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_promptEvalResultType":  {
                            "runAfter":  {
                                "Initialize_variable_prompt_text":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "promptEvalResultType",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_promptEvalResponse":  {
                            "runAfter":  {
                                "Initialize_variable_promptEvalResultType":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "promptEvalResponse",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_HtmlBody":  {
                            "runAfter":  {
                                "Initialize_variable_promptEvalResponse":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "HtmlBody",
                                        "type":  "string",
                                        "value":  "@{replace(parameters('HtmlBodyHeader'),'***EMAILTITLE***',replace(parameters('EmailTitle'),'\u003cINCIDENT_ID\u003e',triggerBody()?['object']?['properties']?['providerIncidentId']))}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_HtmlRow":  {
                            "runAfter":  {
                                "Initialize_variable_HtmlBody":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "HtmlRows",
                                        "type":  "array",
                                        "value":  [
                                        ]
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_SingleResponse":  {
                            "runAfter":  {
                                "Initialize_variable_ContentInComment":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "SingleResponse",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON_-_Read_Incident":  {
                            "runAfter":  {
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@triggerBody()",
                                "schema":  {
                                    "type":  "object",
                                    "properties":  {
                                        "headers":  {
                                            "type":  "object",
                                            "properties":  {
                                                "Accept-Encoding":  {
                                                    "type":  "string"
                                                },
                                                "Host":  {
                                                    "type":  "string"
                                                },
                                                "Max-Forwards":  {
                                                    "type":  "string"
                                                },
                                                "Correlation-Context":  {
                                                    "type":  "string"
                                                },
                                                "traceparent":  {
                                                    "type":  "string"
                                                },
                                                "x-ms-client-tracking-id":  {
                                                    "type":  "string"
                                                },
                                                "x-ms-correlation-request-id":  {
                                                    "type":  "string"
                                                },
                                                "x-ms-forward-internal-correlation-id":  {
                                                    "type":  "string"
                                                },
                                                "X-ARR-LOG-ID":  {
                                                    "type":  "string"
                                                },
                                                "CLIENT-IP":  {
                                                    "type":  "string"
                                                },
                                                "DISGUISED-HOST":  {
                                                    "type":  "string"
                                                },
                                                "X-SITE-DEPLOYMENT-ID":  {
                                                    "type":  "string"
                                                },
                                                "WAS-DEFAULT-HOSTNAME":  {
                                                    "type":  "string"
                                                },
                                                "X-Forwarded-Proto":  {
                                                    "type":  "string"
                                                },
                                                "X-AppService-Proto":  {
                                                    "type":  "string"
                                                },
                                                "X-ARR-SSL":  {
                                                    "type":  "string"
                                                },
                                                "X-Forwarded-TlsVersion":  {
                                                    "type":  "string"
                                                },
                                                "X-Forwarded-For":  {
                                                    "type":  "string"
                                                },
                                                "X-Original-URL":  {
                                                    "type":  "string"
                                                },
                                                "X-WAWS-Unencoded-URL":  {
                                                    "type":  "string"
                                                },
                                                "Content-Length":  {
                                                    "type":  "string"
                                                },
                                                "Content-Type":  {
                                                    "type":  "string"
                                                }
                                            }
                                        },
                                        "body":  {
                                            "type":  "object",
                                            "properties":  {
                                                "eventUniqueId":  {
                                                    "type":  "string"
                                                },
                                                "objectSchemaType":  {
                                                    "type":  "string"
                                                },
                                                "objectEventType":  {
                                                    "type":  "string"
                                                },
                                                "workspaceInfo":  {
                                                    "type":  "object",
                                                    "properties":  {
                                                        "SubscriptionId":  {
                                                            "type":  "string"
                                                        },
                                                        "ResourceGroupName":  {
                                                            "type":  "string"
                                                        },
                                                        "WorkspaceName":  {
                                                            "type":  "string"
                                                        }
                                                    }
                                                },
                                                "workspaceId":  {
                                                    "type":  "string"
                                                },
                                                "object":  {
                                                    "type":  "object",
                                                    "properties":  {
                                                        "id":  {
                                                            "type":  "string"
                                                        },
                                                        "name":  {
                                                            "type":  "string"
                                                        },
                                                        "etag":  {
                                                            "type":  "string"
                                                        },
                                                        "type":  {
                                                            "type":  "string"
                                                        },
                                                        "properties":  {
                                                            "type":  "object",
                                                            "properties":  {
                                                                "title":  {
                                                                    "type":  "string"
                                                                },
                                                                "severity":  {
                                                                    "type":  "string"
                                                                },
                                                                "status":  {
                                                                    "type":  "string"
                                                                },
                                                                "owner":  {
                                                                    "type":  "object",
                                                                    "properties":  {
                                                                        "objectId":  {
                                                                        },
                                                                        "email":  {
                                                                        },
                                                                        "assignedTo":  {
                                                                        },
                                                                        "userPrincipalName":  {
                                                                        }
                                                                    }
                                                                },
                                                                "labels":  {
                                                                    "type":  "array"
                                                                },
                                                                "firstActivityTimeUtc":  {
                                                                    "type":  "string"
                                                                },
                                                                "lastActivityTimeUtc":  {
                                                                    "type":  "string"
                                                                },
                                                                "lastModifiedTimeUtc":  {
                                                                    "type":  "string"
                                                                },
                                                                "createdTimeUtc":  {
                                                                    "type":  "string"
                                                                },
                                                                "incidentNumber":  {
                                                                    "type":  "integer"
                                                                },
                                                                "additionalData":  {
                                                                    "type":  "object",
                                                                    "properties":  {
                                                                        "alertsCount":  {
                                                                            "type":  "integer"
                                                                        },
                                                                        "bookmarksCount":  {
                                                                            "type":  "integer"
                                                                        },
                                                                        "commentsCount":  {
                                                                            "type":  "integer"
                                                                        },
                                                                        "alertProductNames":  {
                                                                            "type":  "array",
                                                                            "items":  {
                                                                                "type":  "string"
                                                                            }
                                                                        },
                                                                        "tactics":  {
                                                                            "type":  "array",
                                                                            "items":  {
                                                                                "type":  "string"
                                                                            }
                                                                        },
                                                                        "techniques":  {
                                                                            "type":  "array",
                                                                            "items":  {
                                                                                "type":  "string"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "relatedAnalyticRuleIds":  {
                                                                    "type":  "array",
                                                                    "items":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "incidentUrl":  {
                                                                    "type":  "string"
                                                                },
                                                                "providerName":  {
                                                                    "type":  "string"
                                                                },
                                                                "providerIncidentId":  {
                                                                    "type":  "string"
                                                                },
                                                                "alerts":  {
                                                                    "type":  "array",
                                                                    "items":  {
                                                                        "type":  "object",
                                                                        "properties":  {
                                                                            "id":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "name":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "type":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "kind":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "properties":  {
                                                                                "type":  "object",
                                                                                "properties":  {
                                                                                    "systemAlertId":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "tactics":  {
                                                                                        "type":  "array",
                                                                                        "items":  {
                                                                                            "type":  "string"
                                                                                        }
                                                                                    },
                                                                                    "alertDisplayName":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "description":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "confidenceLevel":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "severity":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "vendorName":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "productName":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "productComponentName":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "alertType":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "processingEndTime":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "status":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "endTimeUtc":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "startTimeUtc":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "timeGenerated":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "providerAlertId":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "resourceIdentifiers":  {
                                                                                        "type":  "array",
                                                                                        "items":  {
                                                                                            "type":  "object",
                                                                                            "properties":  {
                                                                                                "type":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "workspaceId":  {
                                                                                                    "type":  "string"
                                                                                                }
                                                                                            },
                                                                                            "required":  [
                                                                                                "type",
                                                                                                "workspaceId"
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    "additionalData":  {
                                                                                        "type":  "object",
                                                                                        "properties":  {
                                                                                            "ProcessedBySentinel":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Alert generation status":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Query Period":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Trigger Operator":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Trigger Threshold":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Correlation Id":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Analytics Template Id":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Search Query Results Overall Count":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Data Sources":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Query":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Query Start Time UTC":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Query End Time UTC":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Analytic Rule Ids":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Event Grouping":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Analytic Rule Name":  {
                                                                                                "type":  "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "friendlyName":  {
                                                                                        "type":  "string"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "required":  [
                                                                            "id",
                                                                            "name",
                                                                            "type",
                                                                            "kind",
                                                                            "properties"
                                                                        ]
                                                                    }
                                                                },
                                                                "bookmarks":  {
                                                                    "type":  "array"
                                                                },
                                                                "relatedEntities":  {
                                                                    "type":  "array",
                                                                    "items":  {
                                                                        "type":  "object",
                                                                        "properties":  {
                                                                            "id":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "name":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "type":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "kind":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "properties":  {
                                                                                "type":  "object",
                                                                                "properties":  {
                                                                                    "accountName":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "upnSuffix":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "aadTenantId":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "aadUserId":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "isDomainJoined":  {
                                                                                        "type":  "boolean"
                                                                                    },
                                                                                    "displayName":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "additionalData":  {
                                                                                        "type":  "object",
                                                                                        "properties":  {
                                                                                            "Sources":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "GivenName":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "IsDeleted":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "IsEnabled":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Surname":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "TransitiveDirectoryRoles":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "UserType":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "UpnName":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "SyncFromAad":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "Country":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "MailAddress":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "PhoneNumber":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "AdditionalMailAddresses":  {
                                                                                                "type":  "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "friendlyName":  {
                                                                                        "type":  "string"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "required":  [
                                                                            "id",
                                                                            "name",
                                                                            "type",
                                                                            "kind",
                                                                            "properties"
                                                                        ]
                                                                    }
                                                                },
                                                                "comments":  {
                                                                    "type":  "array"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "Filter_array_-_IP_Addresses":  {
                            "runAfter":  {
                                "Condition_Accounts_exist_":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Query",
                            "inputs":  {
                                "from":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "where":  "@and(\r\nequals(item()?['kind'],'Ip'),\r\nnot(equals(item()?['properties']?['address'],'127.0.0.1')),\r\nnot(startsWith(item()?['properties']?['address'],'::')),\r\nnot(startsWith(item()?['properties']?['address'],'10.')),\r\nnot(startsWith(item()?['properties']?['address'],'6.6.0')),\r\nnot(startsWith(item()?['properties']?['address'],'192.168.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.16.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.17.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.18.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.19.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.20.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.21.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.22.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.23.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.24.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.25.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.26.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.27.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.28.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.29.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.30.')),\r\nnot(startsWith(item()?['properties']?['address'],'172.31.')),\r\nnot(startsWith(item()?['properties']?['address'],'fd00::')),\r\nnot(startsWith(item()?['properties']?['address'],'fc00::')),\r\nnot(startsWith(item()?['properties']?['address'],'ff00::')),\r\nnot(startsWith(item()?['properties']?['address'],'fe80::'))\r\n)"
                            }
                        },
                        "Compose_-_First_IP_Address":  {
                            "runAfter":  {
                                "Select_-_IP_Addresses":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Compose",
                            "inputs":  "@body('Select_-_IP_Addresses')?[0]"
                        },
                        "Select_-_IP_Addresses":  {
                            "runAfter":  {
                                "Filter_array_-_IP_Addresses":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Select",
                            "inputs":  {
                                "from":  "@body('Filter_array_-_IP_Addresses')",
                                "select":  "@item()?['properties']?['address']"
                            }
                        },
                        "Initialize_variables_modifiedPrompts":  {
                            "runAfter":  {
                                "Compose_-_First_IP_Address":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "modifiedPrompts",
                                        "type":  "string",
                                        "value":  "@{replace(\r\nreplace(\r\nreplace(\r\nreplace(\r\nreplace(\r\nreplace(\r\nreplace(\r\nreplace(\r\nreplace(\r\nstring(parameters('Prompts')),\r\n'\u003cIP_ADDRESSES\u003e',\r\njoin(body('Select_-_IP_Addresses'),',')\r\n),\r\n'\u003cIP_ADDRESS\u003e',\r\noutputs('Compose_-_First_IP_Address')\r\n),\r\n'PH-Account',\r\noutputs('Compose_-_First_Account')\r\n),\r\n'\u003cINCIDENT_ID\u003e',\r\ntriggerBody()?['object']?['properties']?['providerIncidentId']),\r\n'\u003cUSER_NAME_IN_UPN\u003e',\r\nsplit(outputs('Compose_-_First_Account'),'@')?[0]),\r\n'\u003cUSERS_UPN\u003e',\r\njoin(body('Select_-_Accounts'),',')),\r\n'\u003c30_DAYS_BEFORE_FIRST_INCIDENT_ACTIVITY\u003e',\r\nformatDateTime(addDays(triggerBody()?['object']?['properties']?['firstActivityTimeUtc'],-30), 'yyyy-MM-ddTHH:mm:ssZ')),\r\n'\u003cDATETIME_NOW\u003e',\r\nformatDateTime(utcNow(), 'yyyy-MM-ddTHH:mm:ssZ')),\r\n'\u003cFormatType\u003e',\r\nif(parameters('ConvertToHtml'),'HTML','Markdown'))}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variables_modifiedPromptsArray":  {
                            "runAfter":  {
                                "Initialize_variables_modifiedPrompts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "modifiedPromptsArray",
                                        "type":  "array",
                                        "value":  "@json(variables('modifiedPrompts'))"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON_-_Prompts":  {
                            "runAfter":  {
                                "Initialize_variables_modifiedPromptsArray":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@variables('modifiedPromptsArray')",
                                "schema":  {
                                    "type":  "array",
                                    "items":  {
                                        "type":  "object",
                                        "properties":  {
                                            "promptType":  {
                                                "type":  "string"
                                            },
                                            "content":  {
                                                "type":  "string"
                                            },
                                            "skillName":  {
                                                "type":  "string"
                                            },
                                            "inputs":  {
                                                "type":  "string"
                                            },
                                            "skillInputDescriptors":  {
                                                "type":  "string"
                                            },
                                            "localizationId":  {
                                            },
                                            "continueOnFailure":  {
                                                "type":  "boolean"
                                            },
                                            "position":  {
                                                "type":  "integer"
                                            },
                                            "replacePrompt":  {
                                                "type":  "string"
                                            }
                                        },
                                        "required":  [
                                            "promptType",
                                            "content",
                                            "skillName",
                                            "inputs",
                                            "skillInputDescriptors",
                                            "localizationId",
                                            "continueOnFailure",
                                            "position",
                                            "replacePrompt"
                                        ]
                                    }
                                }
                            }
                        },
                        "For_each_Prompt":  {
                            "foreach":  "@body('Parse_JSON_-_Prompts')",
                            "actions":  {
                                "Condition_StopExec_is_false_-_Loop":  {
                                    "actions":  {
                                        "Parse_JSON_prompt":  {
                                            "type":  "ParseJson",
                                            "inputs":  {
                                                "content":  "@items('For_each_Prompt')",
                                                "schema":  {
                                                    "type":  "object",
                                                    "properties":  {
                                                        "promptType":  {
                                                            "type":  "string"
                                                        },
                                                        "content":  {
                                                            "type":  "string"
                                                        },
                                                        "skillName":  {
                                                            "type":  "string"
                                                        },
                                                        "inputs":  {
                                                            "type":  "string"
                                                        },
                                                        "skillInputDescriptors":  {
                                                            "type":  "string"
                                                        },
                                                        "localizationId":  {
                                                        },
                                                        "continueOnFailure":  {
                                                            "type":  "boolean"
                                                        },
                                                        "position":  {
                                                            "type":  "integer"
                                                        },
                                                        "replacePrompt":  {
                                                            "type":  "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "Condition_Direct_Skill_":  {
                                            "actions":  {
                                                "Condition_No_Session_-_Direct":  {
                                                    "actions":  {
                                                        "Set_variable_SecCopSessionId_-_Direct":  {
                                                            "runAfter":  {
                                                                "Submit_a_Security_Copilot_prompt_-_Direct_Skill_-_No_Session":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "SecCopSessionId",
                                                                "value":  "@body('Submit_a_Security_Copilot_prompt_-_Direct_Skill_-_No_Session')?['sessionId']"
                                                            }
                                                        },
                                                        "Set_variable_FirstCallToSecCop_-_Direct":  {
                                                            "runAfter":  {
                                                                "Set_variable_SecCopSessionId_-_Direct":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "FirstCallToSecCop",
                                                                "value":  false
                                                            }
                                                        },
                                                        "Submit_a_Security_Copilot_prompt_-_Direct_Skill_-_No_Session":  {
                                                            "type":  "ApiConnection",
                                                            "inputs":  {
                                                                "host":  {
                                                                    "connection":  {
                                                                        "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                                                    }
                                                                },
                                                                "method":  "post",
                                                                "body":  {
                                                                    "PromptContent":  "@body('Parse_JSON_prompt')?['content']",
                                                                    "SkillName":  "@{outputs('Compose_skillName')}",
                                                                    "SkillInputs":  "@body('Parse_JSON_inputs')"
                                                                },
                                                                "path":  "/process-prompt"
                                                            }
                                                        },
                                                        "Set_variable_promptEvalResultType_for_Skill_-_Direct_-_No_Session":  {
                                                            "runAfter":  {
                                                                "Set_variable_FirstCallToSecCop_-_Direct":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "promptEvalResultType",
                                                                "value":  "@body('Submit_a_Security_Copilot_prompt_-_Direct_Skill_-_No_Session')?['evaluationResultType']"
                                                            }
                                                        },
                                                        "Set_variable_promptEvalResponse_for_Skill_-_Direct_-_No_Session":  {
                                                            "runAfter":  {
                                                                "Set_variable_promptEvalResultType_for_Skill_-_Direct_-_No_Session":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "promptEvalResponse",
                                                                "value":  "@body('Submit_a_Security_Copilot_prompt_-_Direct_Skill_-_No_Session')?['EvaluationResultContent']"
                                                            }
                                                        }
                                                    },
                                                    "runAfter":  {
                                                        "Parse_JSON_inputs":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else":  {
                                                        "actions":  {
                                                            "Submit_a_Security_Copilot_prompt_-_Direct_Skill_-_Existing_Session":  {
                                                                "type":  "ApiConnection",
                                                                "inputs":  {
                                                                    "host":  {
                                                                        "connection":  {
                                                                            "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method":  "post",
                                                                    "body":  {
                                                                        "PromptContent":  "@body('Parse_JSON_prompt')?['content']",
                                                                        "SessionId":  "@variables('SecCopSessionId')",
                                                                        "SkillName":  "@{outputs('Compose_skillName')}",
                                                                        "SkillInputs":  "@body('Parse_JSON_inputs')"
                                                                    },
                                                                    "path":  "/process-prompt"
                                                                }
                                                            },
                                                            "Set_variable_promptEvalResultType_for_Skill_-_Direct_-_Existing_Session":  {
                                                                "runAfter":  {
                                                                    "Submit_a_Security_Copilot_prompt_-_Direct_Skill_-_Existing_Session":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "promptEvalResultType",
                                                                    "value":  "@body('Submit_a_Security_Copilot_prompt_-_Direct_Skill_-_Existing_Session')?['evaluationResultType']"
                                                                }
                                                            },
                                                            "Set_variable_promptEvalResponse_for_Skill_-_Direct_-_Existing_Session":  {
                                                                "runAfter":  {
                                                                    "Set_variable_promptEvalResultType_for_Skill_-_Direct_-_Existing_Session":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "promptEvalResponse",
                                                                    "value":  "@body('Submit_a_Security_Copilot_prompt_-_Direct_Skill_-_Existing_Session')?['EvaluationResultContent']"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression":  {
                                                        "or":  [
                                                            {
                                                                "equals":  [
                                                                    "@variables('FirstCallToSecCop')",
                                                                    true
                                                                ]
                                                            },
                                                            {
                                                                "equals":  [
                                                                    "@parameters('UseSingleSession')",
                                                                    false
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type":  "If"
                                                },
                                                "Compose_skillName":  {
                                                    "type":  "Compose",
                                                    "inputs":  "@trim(body('Parse_JSON_prompt')?['skillName'])"
                                                },
                                                "Parse_JSON_inputs":  {
                                                    "runAfter":  {
                                                        "Compose_skillName":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ParseJson",
                                                    "inputs":  {
                                                        "content":  "@body('Parse_JSON_prompt')?['inputs']",
                                                        "schema":  {
                                                            "type":  "object",
                                                            "properties":  {
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "runAfter":  {
                                                "Parse_JSON_prompt":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else":  {
                                                "actions":  {
                                                    "Condition_No_Session_-_Prompt":  {
                                                        "actions":  {
                                                            "Submit_a_Security_Copilot_prompt_-_Single_Prompt_-_No_Session":  {
                                                                "type":  "ApiConnection",
                                                                "inputs":  {
                                                                    "host":  {
                                                                        "connection":  {
                                                                            "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method":  "post",
                                                                    "body":  {
                                                                        "PromptContent":  "@body('Parse_JSON_prompt')?['content']"
                                                                    },
                                                                    "path":  "/process-prompt"
                                                                }
                                                            },
                                                            "Set_variable_SecCopSessionId_-_Prompt":  {
                                                                "runAfter":  {
                                                                    "Submit_a_Security_Copilot_prompt_-_Single_Prompt_-_No_Session":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "SecCopSessionId",
                                                                    "value":  "@body('Submit_a_Security_Copilot_prompt_-_Single_Prompt_-_No_Session')?['sessionId']"
                                                                }
                                                            },
                                                            "Set_variable_FirstCallToSecCop_-_Prompt":  {
                                                                "runAfter":  {
                                                                    "Set_variable_SecCopSessionId_-_Prompt":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "FirstCallToSecCop",
                                                                    "value":  false
                                                                }
                                                            },
                                                            "Set_variable_promptEvalResultType_for_Skill_-_Prompt_-_No_Session":  {
                                                                "runAfter":  {
                                                                    "Set_variable_FirstCallToSecCop_-_Prompt":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "promptEvalResultType",
                                                                    "value":  "@body('Submit_a_Security_Copilot_prompt_-_Single_Prompt_-_No_Session')?['evaluationResultType']"
                                                                }
                                                            },
                                                            "Set_variable_promptEvalResponse_for_Skill_-_Prompt_-_No_Session":  {
                                                                "runAfter":  {
                                                                    "Set_variable_promptEvalResultType_for_Skill_-_Prompt_-_No_Session":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "promptEvalResponse",
                                                                    "value":  "@body('Submit_a_Security_Copilot_prompt_-_Single_Prompt_-_No_Session')?['EvaluationResultContent']"
                                                                }
                                                            }
                                                        },
                                                        "else":  {
                                                            "actions":  {
                                                                "Submit_a_Security_Copilot_prompt_-_Single_Prompt_-_Existing_Session":  {
                                                                    "type":  "ApiConnection",
                                                                    "inputs":  {
                                                                        "host":  {
                                                                            "connection":  {
                                                                                "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method":  "post",
                                                                        "body":  {
                                                                            "PromptContent":  "@body('Parse_JSON_prompt')?['content']",
                                                                            "SessionId":  "@variables('SecCopSessionId')"
                                                                        },
                                                                        "path":  "/process-prompt"
                                                                    }
                                                                },
                                                                "Set_variable_promptEvalResultType_for_Skill_-_Prompt_-_Existing_Session":  {
                                                                    "runAfter":  {
                                                                        "Submit_a_Security_Copilot_prompt_-_Single_Prompt_-_Existing_Session":  [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type":  "SetVariable",
                                                                    "inputs":  {
                                                                        "name":  "promptEvalResultType",
                                                                        "value":  "@body('Submit_a_Security_Copilot_prompt_-_Single_Prompt_-_Existing_Session')?['evaluationResultType']"
                                                                    }
                                                                },
                                                                "Set_variable_promptEvalResponse_for_Skill_-_Prompt_-_Existing_Session":  {
                                                                    "runAfter":  {
                                                                        "Set_variable_promptEvalResultType_for_Skill_-_Prompt_-_Existing_Session":  [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type":  "SetVariable",
                                                                    "inputs":  {
                                                                        "name":  "promptEvalResponse",
                                                                        "value":  "@body('Submit_a_Security_Copilot_prompt_-_Single_Prompt_-_Existing_Session')?['EvaluationResultContent']"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "expression":  {
                                                            "or":  [
                                                                {
                                                                    "equals":  [
                                                                        "@variables('FirstCallToSecCop')",
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "equals":  [
                                                                        "@parameters('UseSingleSession')",
                                                                        false
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type":  "If"
                                                    }
                                                }
                                            },
                                            "expression":  {
                                                "and":  [
                                                    {
                                                        "equals":  [
                                                            "@body('Parse_JSON_prompt')?['promptType']",
                                                            "Skill"
                                                        ]
                                                    },
                                                    {
                                                        "equals":  [
                                                            "@variables('StopExec')",
                                                            false
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type":  "If"
                                        },
                                        "Condition_promptEvalResponse":  {
                                            "actions":  {
                                                "Compose_response":  {
                                                    "runAfter":  {
                                                        "Condition_-_Convert_MD":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "Compose",
                                                    "inputs":  {
                                                        "position":  "@{body('Parse_JSON_prompt')?['position']}",
                                                        "prompt":  "@{if(empty(body('Parse_JSON_prompt')?['replacePrompt']),body('Parse_JSON_prompt')?['content'],body('Parse_JSON_prompt')?['replacePrompt'])}",
                                                        "response":  "@{variables('promptEvalResponse')}"
                                                    }
                                                },
                                                "Append_to_array_variable":  {
                                                    "runAfter":  {
                                                        "Compose_response":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "AppendToArrayVariable",
                                                    "inputs":  {
                                                        "name":  "HtmlRows",
                                                        "value":  "@outputs('Compose_response')"
                                                    }
                                                },
                                                "Condition_-_Convert_MD":  {
                                                    "actions":  {
                                                        "Condition_No_Session_-_HTML":  {
                                                            "actions":  {
                                                                "Submit_a_Security_Copilot_prompt_-_Convert_to_HTML_-_No_Session":  {
                                                                    "type":  "ApiConnection",
                                                                    "inputs":  {
                                                                        "host":  {
                                                                            "connection":  {
                                                                                "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method":  "post",
                                                                        "body":  {
                                                                            "PromptContent":  "/AskGPT Convert the following markdown string to HTML. Do not include the doctype tag and the header. Write only the content of the HTML body, without the opening and closing \"body\" tag. Do not write any character before and after that HTML content. This is the string written in lightweight markdown language to be converted in HTML format: \n@{variables('promptEvalResponse')}"
                                                                        },
                                                                        "path":  "/process-prompt"
                                                                    }
                                                                },
                                                                "Condition_-_Conversion_Successful_-_No_Session":  {
                                                                    "actions":  {
                                                                        "Set_variable_promptEvalResponse_in_HTML_-_No_Session":  {
                                                                            "type":  "SetVariable",
                                                                            "inputs":  {
                                                                                "name":  "promptEvalResponse",
                                                                                "value":  "@body('Submit_a_Security_Copilot_prompt_-_Convert_to_HTML_-_No_Session')?['EvaluationResultContent']"
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter":  {
                                                                        "Submit_a_Security_Copilot_prompt_-_Convert_to_HTML_-_No_Session":  [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "else":  {
                                                                        "actions":  {
                                                                        }
                                                                    },
                                                                    "expression":  {
                                                                        "and":  [
                                                                            {
                                                                                "equals":  [
                                                                                    "@body('Submit_a_Security_Copilot_prompt_-_Convert_to_HTML_-_No_Session')?['evaluationResultType']",
                                                                                    "Success"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type":  "If"
                                                                }
                                                            },
                                                            "else":  {
                                                                "actions":  {
                                                                    "Submit_a_Security_Copilot_prompt_-_Convert_to_HTML_-_Single_Session":  {
                                                                        "type":  "ApiConnection",
                                                                        "inputs":  {
                                                                            "host":  {
                                                                                "connection":  {
                                                                                    "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                                                                }
                                                                            },
                                                                            "method":  "post",
                                                                            "body":  {
                                                                                "PromptContent":  "/AskGPT Convert the following markdown string to HTML. Do not include the doctype tag and the header. Write only the content of the HTML body, without the opening and closing \"body\" tag. Do not write any character before and after that HTML content. This is the string written in lightweight markdown language to be converted in HTML format: \n@{variables('promptEvalResponse')}",
                                                                                "SessionId":  "@variables('SecCopSessionId')"
                                                                            },
                                                                            "path":  "/process-prompt"
                                                                        }
                                                                    },
                                                                    "Condition_-_Conversion_Successful_-_Single_Session":  {
                                                                        "actions":  {
                                                                            "Set_variable_promptEvalResponse_in_HTML_-_Single_Session":  {
                                                                                "type":  "SetVariable",
                                                                                "inputs":  {
                                                                                    "name":  "promptEvalResponse",
                                                                                    "value":  "@body('Submit_a_Security_Copilot_prompt_-_Convert_to_HTML_-_Single_Session')?['EvaluationResultContent']"
                                                                                }
                                                                            }
                                                                        },
                                                                        "runAfter":  {
                                                                            "Submit_a_Security_Copilot_prompt_-_Convert_to_HTML_-_Single_Session":  [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "else":  {
                                                                            "actions":  {
                                                                            }
                                                                        },
                                                                        "expression":  {
                                                                            "and":  [
                                                                                {
                                                                                    "equals":  [
                                                                                        "@body('Submit_a_Security_Copilot_prompt_-_Convert_to_HTML_-_Single_Session')?['evaluationResultType']",
                                                                                        "Success"
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type":  "If"
                                                                    }
                                                                }
                                                            },
                                                            "expression":  {
                                                                "and":  [
                                                                    {
                                                                        "equals":  [
                                                                            "@parameters('UseSingleSession')",
                                                                            false
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type":  "If"
                                                        }
                                                    },
                                                    "else":  {
                                                        "actions":  {
                                                        }
                                                    },
                                                    "expression":  {
                                                        "and":  [
                                                            {
                                                                "equals":  [
                                                                    "@parameters('ConvertToHtml')",
                                                                    true
                                                                ]
                                                            },
                                                            {
                                                                "or":  [
                                                                    {
                                                                        "contains":  [
                                                                            "@variables('promptEvalResponse')",
                                                                            "#"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "contains":  [
                                                                            "@variables('promptEvalResponse')",
                                                                            "*"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "contains":  [
                                                                            "@variables('promptEvalResponse')",
                                                                            "+"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "contains":  [
                                                                            "@variables('promptEvalResponse')",
                                                                            "\\n"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "contains":  [
                                                                            "@variables('promptEvalResponse')",
                                                                            "["
                                                                        ]
                                                                    },
                                                                    {
                                                                        "contains":  [
                                                                            "@variables('promptEvalResponse')",
                                                                            "|"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "contains":  [
                                                                            "@variables('promptEvalResponse')",
                                                                            "`"
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type":  "If"
                                                }
                                            },
                                            "runAfter":  {
                                                "Condition_Direct_Skill_":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else":  {
                                                "actions":  {
                                                    "Condition_blocking":  {
                                                        "actions":  {
                                                        },
                                                        "else":  {
                                                            "actions":  {
                                                                "Set_variable_StopExec":  {
                                                                    "type":  "SetVariable",
                                                                    "inputs":  {
                                                                        "name":  "StopExec",
                                                                        "value":  true
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "expression":  {
                                                            "and":  [
                                                                {
                                                                    "equals":  [
                                                                        "@body('Parse_JSON_prompt')?['continueOnFailure']",
                                                                        true
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type":  "If"
                                                    }
                                                }
                                            },
                                            "expression":  {
                                                "and":  [
                                                    {
                                                        "equals":  [
                                                            "@variables('promptEvalResultType')",
                                                            "Success"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type":  "If"
                                        }
                                    },
                                    "else":  {
                                        "actions":  {
                                        }
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "equals":  [
                                                    "@variables('StopExec')",
                                                    false
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                }
                            },
                            "runAfter":  {
                                "Initialize_variables_StopExec":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach",
                            "runtimeConfiguration":  {
                                "concurrency":  {
                                    "repetitions":  1
                                }
                            }
                        },
                        "Initialize_variables_SecCopSessionId":  {
                            "runAfter":  {
                                "Initialize_variable_SingleResponse":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "SecCopSessionId",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variables_StopExec":  {
                            "runAfter":  {
                                "Initialize_variables_FirstCallToSecCop":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "StopExec",
                                        "type":  "boolean",
                                        "value":  false
                                    }
                                ]
                            }
                        },
                        "Condition_StopExec_is_false_-_Finalization":  {
                            "actions":  {
                                "Compose_Sorted_Rows":  {
                                    "type":  "Compose",
                                    "inputs":  "@sort(variables('HtmlRows'),'position')"
                                },
                                "Parse_JSON_Sorted_Responses":  {
                                    "runAfter":  {
                                        "Compose_Sorted_Rows":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@outputs('Compose_Sorted_Rows')",
                                        "schema":  {
                                            "type":  "array",
                                            "items":  {
                                                "type":  "object",
                                                "properties":  {
                                                    "position":  {
                                                        "type":  "string"
                                                    },
                                                    "prompt":  {
                                                        "type":  "string"
                                                    },
                                                    "response":  {
                                                        "type":  "string"
                                                    }
                                                },
                                                "required":  [
                                                    "position",
                                                    "prompt",
                                                    "response"
                                                ]
                                            }
                                        }
                                    }
                                },
                                "Condition_Send_by_Email":  {
                                    "actions":  {
                                        "For_each_-_Serial_-_Sorted_Responses_-_Email":  {
                                            "foreach":  "@outputs('Compose_Sorted_Rows')",
                                            "actions":  {
                                                "Append_Row_to_string_variable_HtmlBody":  {
                                                    "runAfter":  {
                                                        "Compose_Html_Body_Row":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "AppendToStringVariable",
                                                    "inputs":  {
                                                        "name":  "HtmlBody",
                                                        "value":  "@outputs('Compose_Html_Body_Row')"
                                                    }
                                                },
                                                "Compose_Html_Body_Row":  {
                                                    "type":  "Compose",
                                                    "inputs":  "@replace(replace(parameters('HtmlBodyRow'),'***CONTENT1***',items('For_each_-_Serial_-_Sorted_Responses_-_Email')?['prompt']),'***CONTENT2***',items('For_each_-_Serial_-_Sorted_Responses_-_Email')?['response'])"
                                                }
                                            },
                                            "type":  "Foreach",
                                            "runtimeConfiguration":  {
                                                "concurrency":  {
                                                    "repetitions":  1
                                                }
                                            }
                                        },
                                        "Append_Footer_to_string_variable_HtmlBody":  {
                                            "runAfter":  {
                                                "For_each_-_Serial_-_Sorted_Responses_-_Email":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "AppendToStringVariable",
                                            "inputs":  {
                                                "name":  "HtmlBody",
                                                "value":  "@parameters('HtmlBodyFooter')"
                                            }
                                        },
                                        "Send_an_email_(V2)":  {
                                            "runAfter":  {
                                                "Append_Footer_to_string_variable_HtmlBody":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "ApiConnection",
                                            "inputs":  {
                                                "host":  {
                                                    "connection":  {
                                                        "name":  "@parameters('$connections')['office365']['connectionId']"
                                                    }
                                                },
                                                "method":  "post",
                                                "body":  {
                                                    "To":  "@parameters('EmailRecipients')",
                                                    "Subject":  "@replace(parameters('Email Subject'),'\u003cINCIDENT_ID\u003e',triggerBody()?['object']?['properties']?['providerIncidentId'])",
                                                    "Body":  "\u003cp class=\"editor-paragraph\"\u003e@{variables('HtmlBody')}\u003c/p\u003e",
                                                    "Importance":  "Normal"
                                                },
                                                "path":  "/v2/Mail"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_JSON_Sorted_Responses":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "else":  {
                                        "actions":  {
                                        }
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "equals":  [
                                                    "@parameters('SendResultsByEmail')",
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                },
                                "Condition_Write_in_Incident":  {
                                    "actions":  {
                                        "For_each_-_Serial_-_Sorted_Responses_-_Incident":  {
                                            "foreach":  "@outputs('Compose_Sorted_Rows')",
                                            "actions":  {
                                                "Append_to_string_variable_ContentInComment":  {
                                                    "type":  "AppendToStringVariable",
                                                    "inputs":  {
                                                        "name":  "ContentInComment",
                                                        "value":  "@concat('----------------\r\n\r\n### ',\r\nitems('For_each_-_Serial_-_Sorted_Responses_-_Incident')?['prompt'],': \r\n\r\n',items('For_each_-_Serial_-_Sorted_Responses_-_Incident')?['response'])"
                                                    }
                                                }
                                            },
                                            "type":  "Foreach",
                                            "runtimeConfiguration":  {
                                                "concurrency":  {
                                                    "repetitions":  1
                                                }
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_JSON_Sorted_Responses":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "else":  {
                                        "actions":  {
                                        }
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "equals":  [
                                                    "@parameters('WriteResultsInIncident')",
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                },
                                "Add_comment_to_incident_(V3)_-_Full_Response":  {
                                    "runAfter":  {
                                        "Condition_-_Use_single_session":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "body":  {
                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                            "message":  "\u003cp class=\"editor-paragraph\"\u003e@{variables('ContentInComment')}\u003c/p\u003e"
                                        },
                                        "path":  "/Incidents/Comment"
                                    }
                                },
                                "Condition_-_Use_single_session":  {
                                    "actions":  {
                                        "Add_comment_to_incident_(V3)_-_Session_ID":  {
                                            "type":  "ApiConnection",
                                            "inputs":  {
                                                "host":  {
                                                    "connection":  {
                                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method":  "post",
                                                "body":  {
                                                    "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                    "message":  "\u003cp class=\"editor-paragraph\"\u003eInvestigation session in Security Copilot: \u003ca href=\"https://securitycopilot.microsoft.com/sessions/@{variables('SecCopSessionId')}\" class=\"editor-link\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eHERE\u003c/strong\u003e\u003c/b\u003e\u003c/a\u003e\u003c/p\u003e"
                                                },
                                                "path":  "/Incidents/Comment"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Condition_Write_in_Incident":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "else":  {
                                        "actions":  {
                                        }
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "equals":  [
                                                    "@parameters('UseSingleSession')",
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                }
                            },
                            "runAfter":  {
                                "For_each_Prompt":  [
                                    "Succeeded"
                                ]
                            },
                            "else":  {
                                "actions":  {
                                    "Terminate_-_Error":  {
                                        "type":  "Terminate",
                                        "inputs":  {
                                            "runStatus":  "Failed"
                                        }
                                    }
                                }
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "equals":  [
                                            "@variables('StopExec')",
                                            false
                                        ]
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "Initialize_variables_FirstCallToSecCop":  {
                            "runAfter":  {
                                "Initialize_variables_SecCopSessionId":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "FirstCallToSecCop",
                                        "type":  "boolean",
                                        "value":  true
                                    }
                                ]
                            }
                        },
                        "Filter_array_-_Accounts":  {
                            "runAfter":  {
                                "Parse_JSON_-_Read_Incident":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Query",
                            "inputs":  {
                                "from":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "where":  "@equals(and(\r\n\r\nequals(item()?['kind'],'Account'),\r\n\r\nnot(equals(item()?['properties']?['additionalData']?['UserPrincipalName'],null)),\r\n\r\nnot(equals(item()?['properties']?['additionalData']?['UserPrincipalName'],''))\r\n\r\n),true)"
                            }
                        },
                        "Select_-_Accounts":  {
                            "runAfter":  {
                                "Filter_array_-_Accounts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Select",
                            "inputs":  {
                                "from":  "@body('Filter_array_-_Accounts')",
                                "select":  "@item()?['properties']?['additionalData']?['UserPrincipalName']"
                            }
                        },
                        "Condition_Accounts_exist_":  {
                            "actions":  {
                            },
                            "runAfter":  {
                                "Compose_-_First_Account":  [
                                    "Succeeded"
                                ]
                            },
                            "else":  {
                                "actions":  {
                                    "Terminate_-_No_Accounts_in_the_Incident":  {
                                        "type":  "Terminate",
                                        "inputs":  {
                                            "runStatus":  "Cancelled"
                                        }
                                    }
                                }
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "greater":  [
                                            "@length(body('Select_-_Accounts'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "Compose_-_First_Account":  {
                            "runAfter":  {
                                "Select_-_Accounts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Compose",
                            "inputs":  "@body('Select_-_Accounts')?[0]"
                        },
                        "Initialize_variable_ContentInComment":  {
                            "runAfter":  {
                                "Initialize_variable_HtmlRow":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "ContentInComment",
                                        "type":  "string"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "securitycopilot":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('SecuritycopilotConnectionName'))]",
                                "connectionName":  "[variables('SecuritycopilotConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Securitycopilot')]"
                            },
                            "office365":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                "connectionName":  "[variables('Office365ConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "AccountCompromiseInvestigationOptimized",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('SecuritycopilotConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('SecuritycopilotConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('SecuritycopilotConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Securitycopilot')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('Office365ConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('Office365ConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                }
            }
        }
    ]
}
